import json
import matplotlib
matplotlib.use('TkAgg')  # Sử dụng backend TkAgg để tránh lỗi
import matplotlib.pyplot as plt
import os

def load_json_data(json_file):
    """Đọc dữ liệu từ file JSON."""
    if not os.path.exists(json_file):
        print(f"Error: File '{json_file}' does not exist.")
        return None
    try:
        with open(json_file, 'r', encoding='utf-8') as f:
            data = json.load(f)
        return data
    except Exception as e:
        print(f"Error reading JSON file: {e}")
        return None

def plot_recognition_stats(json_file):
    """Vẽ biểu đồ cột từ dữ liệu JSON."""
    # Đọc dữ liệu JSON
    data = load_json_data(json_file)
    if not data:
        return

    # Chuẩn bị dữ liệu cho biểu đồ
    angle_labels = []
    accuracies = []
    frame_counts = []

    # Các góc chính với thứ tự mong muốn
    main_angles = [
        "Nhìn thẳng",
        "Nhìn hơi lên trên",
        "Nhìn hơi xuống dưới",
        "Nhìn hơi sang trái",
        "Nhìn hơi sang phải"
    ]

    # Thêm các góc chính
    for angle in main_angles:
        if angle in data:
            angle_labels.append(angle)
            accuracies.append(data[angle]['accuracy'])
            frame_counts.append(data[angle]['frames'])

    # Thêm các góc khác, sắp xếp theo pitch và yaw
    other_angles = [k for k in data.keys() if k not in main_angles]
    sorted_other_angles = sorted(other_angles, key=lambda x: (
        float(x.split(',')[0].split(':')[1]),  # Pitch
        float(x.split(',')[1].split(':')[1])   # Yaw
    ))

    for angle in sorted_other_angles:
        try:
            angle_labels.append(angle)
            accuracies.append(data[angle]['accuracy'])
            frame_counts.append(data[angle]['frames'])
        except KeyError as e:
            print(f"Error: Missing key {e} in JSON data for angle '{angle}'")
            continue

    if not angle_labels:
        print("Error: No valid data to plot.")
        return

    # Vẽ biểu đồ cột
    try:
        plt.figure(figsize=(12, 6))
        bars = plt.bar(angle_labels, accuracies, color='skyblue')
        plt.xlabel("Góc nhìn khuôn mặt")
        plt.ylabel("Tỷ lệ nhận diện khuôn mặt thật (%)")
        plt.title("Thống kê Tỷ lệ Nhận diện Khuôn mặt Thật theo Góc")
        plt.ylim(0, 100)
        plt.grid(axis='y', linestyle='--')
        plt.xticks(rotation=45, ha='right')

        # Hiển thị giá trị tỷ lệ và số khung trên đầu mỗi cột
        for i, bar in enumerate(bars):
            yval = bar.get_height()
            plt.text(bar.get_x() + bar.get_width()/2, yval + 1,
                     f'{yval:.2f}% ({frame_counts[i]} khung)',
                     ha='center', va='bottom')

        plt.tight_layout()
        plt.show()
    except Exception as e:
        print(f"Error plotting chart: {e}")

if __name__ == "__main__":
    # Đường dẫn đến file JSON
    json_file_path = "recognition_results_faked.json"
    plot_recognition_stats(json_file_path)